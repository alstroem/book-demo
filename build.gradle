buildscript {
    ext {
        compileSdkVer = 31
        minSdkVer = 26
        targetSdkVer = 31
    }

    dependencies {
        classpath "com.google.dagger:hilt-android-gradle-plugin:${libs.versions.hilt.ver.get()}"
        classpath "org.jetbrains.kotlin:kotlin-serialization:1.6.10"
    }
}// Top-level build file where you can add configuration options common to all sub-projects/modules.

plugins {
    id 'com.android.application' version '7.1.2' apply false
    id 'com.android.library' version '7.1.2' apply false
    id 'org.jetbrains.kotlin.android' version '1.6.10' apply false
    id "org.jlleitschuh.gradle.ktlint" version '10.2.1'

    alias(libs.plugins.gradle.updates)
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task installGitHook(type: Copy) {
    from new File(rootProject.rootDir, 'pre-commit')
    into { new File(rootProject.rootDir, '.git/hooks') }
    fileMode 0777
}

tasks.getByPath(':app:preBuild').dependsOn installGitHook

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

// https://github.com/ben-manes/gradle-versions-plugin
tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
        isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
    }
}
